// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace eveobjects {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class Objects {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_eveobjects_infoObject__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::eveobjects.infoObject, global::eveobjects.infoObject.Builder> internal__static_eveobjects_infoObject__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_eveobjects_stringgroup__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::eveobjects.stringgroup, global::eveobjects.stringgroup.Builder> internal__static_eveobjects_stringgroup__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_eveobjects_BooleanObject__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::eveobjects.BooleanObject, global::eveobjects.BooleanObject.Builder> internal__static_eveobjects_BooleanObject__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_eveobjects_functionCall__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::eveobjects.functionCall, global::eveobjects.functionCall.Builder> internal__static_eveobjects_functionCall__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_eveobjects_systemObject__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::eveobjects.systemObject, global::eveobjects.systemObject.Builder> internal__static_eveobjects_systemObject__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_eveobjects_stringResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::eveobjects.stringResponse, global::eveobjects.stringResponse.Builder> internal__static_eveobjects_stringResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_eveobjects_overview__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::eveobjects.overview, global::eveobjects.overview.Builder> internal__static_eveobjects_overview__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_eveobjects_itemgroup__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::eveobjects.itemgroup, global::eveobjects.itemgroup.Builder> internal__static_eveobjects_itemgroup__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_eveobjects_item__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::eveobjects.item, global::eveobjects.item.Builder> internal__static_eveobjects_item__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_eveobjects_label__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::eveobjects.label, global::eveobjects.label.Builder> internal__static_eveobjects_label__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_eveobjects_TargetList__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::eveobjects.TargetList, global::eveobjects.TargetList.Builder> internal__static_eveobjects_TargetList__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_eveobjects_targetentry__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::eveobjects.targetentry, global::eveobjects.targetentry.Builder> internal__static_eveobjects_targetentry__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_eveobjects_jammers__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::eveobjects.jammers, global::eveobjects.jammers.Builder> internal__static_eveobjects_jammers__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_eveobjects_Interface__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::eveobjects.Interface, global::eveobjects.Interface.Builder> internal__static_eveobjects_Interface__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Objects() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "Cg1vYmplY3RzLnByb3RvEgpldmVvYmplY3RzIikKCmluZm9PYmplY3QSDAoE" + 
          "dGV4dBgBIAEoCRINCgV2YWx1ZRgCIAEoBSI3CgtzdHJpbmdncm91cBIoCgRk" + 
          "YXRhGAEgAygLMhouZXZlb2JqZWN0cy5zdHJpbmdSZXNwb25zZSIfCg1Cb29s" + 
          "ZWFuT2JqZWN0Eg4KBmlzdHJ1ZRgBIAIoCCIyCgxmdW5jdGlvbkNhbGwSDAoE" + 
          "bmFtZRgBIAIoCRIUCgxzdHJwYXJhbWV0ZXIYAiABKAkiKgoMc3lzdGVtT2Jq" + 
          "ZWN0EgwKBG5hbWUYASACKAkSDAoEaW5mbxgCIAIoCSIeCg5zdHJpbmdSZXNw" + 
          "b25zZRIMCgRkYXRhGAEgAigJIjQKCG92ZXJ2aWV3EigKDW92ZXJ2aWV3RW50" + 
          "cnkYASADKAsyES5ldmVvYmplY3RzLmxhYmVsIiwKCWl0ZW1ncm91cBIfCgVp" + 
          "dGVtcxgBIAMoCzIQLmV2ZW9iamVjdHMuaXRlbSJlCgRpdGVtEgwKBG5hbWUY" + 
          "ASACKAkSEAoIcXVhbnRpdHkYAiACKAUSDAoEbWV0YRgDIAIoCRIOCgZ2b2x1" + 
          "bWUYBCACKAkSHwoEZGF0YRgFIAIoCzIRLmV2ZW9iamVjdHMubGFiZWwiZwoF" + 
          "bGFiZWwSDAoEdGV4dBgBIAIoCRIQCgh0b3BMZWZ0WBgCIAIoBRIQCgh0b3BM" + 
          "ZWZ0WRgDIAIoBRINCgV3aWR0aBgEIAIoBRIOCgZoZWlnaHQYBSACKAUSDQoF" + 
          "Y29sb3IYBiABKAEiOQoKVGFyZ2V0TGlzdBIrCgp0aGlzdGFyZ2V0GAEgAygL" + 
          "MhcuZXZlb2JqZWN0cy50YXJnZXRlbnRyeSJRCgt0YXJnZXRlbnRyeRIfCgR0" + 
          "ZXh0GAEgASgLMhEuZXZlb2JqZWN0cy5sYWJlbBIhCgRqYW1zGAIgASgLMhMu" + 
          "ZXZlb2JqZWN0cy5qYW1tZXJzIhkKB2phbW1lcnMSDgoGamFtbWVyGAEgAygJ" + 
          "IvEBCglJbnRlcmZhY2USDAoEbmFtZRgBIAIoCRIQCgh0b3BsZWZ0WBgCIAIo" + 
          "BRIQCgh0b3BsZWZ0WRgDIAIoBRINCgV3aWR0aBgEIAIoBRIOCgZoZWlnaHQY" + 
          "BSACKAUSFgoOaGFzQ2xvc2VCdXR0b24YBiABKAgSFQoNY2xvc2VUb3BMZWZ0" + 
          "WBgHIAEoBRIVCg1jbG9zZVRvcExlZnRZGAggASgFEhkKEWhhc0NvbnRpbnVl" + 
          "QnV0dG9uGAkgASgIEhgKEGNvbnRpbnVlVG9wTGVmdFgYCiABKAUSGAoQY29u" + 
          "dGludWVUb3BMZWZ0WRgLIAEoBQ==");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_eveobjects_infoObject__Descriptor = Descriptor.MessageTypes[0];
        internal__static_eveobjects_infoObject__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::eveobjects.infoObject, global::eveobjects.infoObject.Builder>(internal__static_eveobjects_infoObject__Descriptor,
                new string[] { "Text", "Value", });
        internal__static_eveobjects_stringgroup__Descriptor = Descriptor.MessageTypes[1];
        internal__static_eveobjects_stringgroup__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::eveobjects.stringgroup, global::eveobjects.stringgroup.Builder>(internal__static_eveobjects_stringgroup__Descriptor,
                new string[] { "Data", });
        internal__static_eveobjects_BooleanObject__Descriptor = Descriptor.MessageTypes[2];
        internal__static_eveobjects_BooleanObject__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::eveobjects.BooleanObject, global::eveobjects.BooleanObject.Builder>(internal__static_eveobjects_BooleanObject__Descriptor,
                new string[] { "Istrue", });
        internal__static_eveobjects_functionCall__Descriptor = Descriptor.MessageTypes[3];
        internal__static_eveobjects_functionCall__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::eveobjects.functionCall, global::eveobjects.functionCall.Builder>(internal__static_eveobjects_functionCall__Descriptor,
                new string[] { "Name", "Strparameter", });
        internal__static_eveobjects_systemObject__Descriptor = Descriptor.MessageTypes[4];
        internal__static_eveobjects_systemObject__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::eveobjects.systemObject, global::eveobjects.systemObject.Builder>(internal__static_eveobjects_systemObject__Descriptor,
                new string[] { "Name", "Info", });
        internal__static_eveobjects_stringResponse__Descriptor = Descriptor.MessageTypes[5];
        internal__static_eveobjects_stringResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::eveobjects.stringResponse, global::eveobjects.stringResponse.Builder>(internal__static_eveobjects_stringResponse__Descriptor,
                new string[] { "Data", });
        internal__static_eveobjects_overview__Descriptor = Descriptor.MessageTypes[6];
        internal__static_eveobjects_overview__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::eveobjects.overview, global::eveobjects.overview.Builder>(internal__static_eveobjects_overview__Descriptor,
                new string[] { "OverviewEntry", });
        internal__static_eveobjects_itemgroup__Descriptor = Descriptor.MessageTypes[7];
        internal__static_eveobjects_itemgroup__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::eveobjects.itemgroup, global::eveobjects.itemgroup.Builder>(internal__static_eveobjects_itemgroup__Descriptor,
                new string[] { "Items", });
        internal__static_eveobjects_item__Descriptor = Descriptor.MessageTypes[8];
        internal__static_eveobjects_item__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::eveobjects.item, global::eveobjects.item.Builder>(internal__static_eveobjects_item__Descriptor,
                new string[] { "Name", "Quantity", "Meta", "Volume", "Data", });
        internal__static_eveobjects_label__Descriptor = Descriptor.MessageTypes[9];
        internal__static_eveobjects_label__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::eveobjects.label, global::eveobjects.label.Builder>(internal__static_eveobjects_label__Descriptor,
                new string[] { "Text", "TopLeftX", "TopLeftY", "Width", "Height", "Color", });
        internal__static_eveobjects_TargetList__Descriptor = Descriptor.MessageTypes[10];
        internal__static_eveobjects_TargetList__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::eveobjects.TargetList, global::eveobjects.TargetList.Builder>(internal__static_eveobjects_TargetList__Descriptor,
                new string[] { "Thistarget", });
        internal__static_eveobjects_targetentry__Descriptor = Descriptor.MessageTypes[11];
        internal__static_eveobjects_targetentry__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::eveobjects.targetentry, global::eveobjects.targetentry.Builder>(internal__static_eveobjects_targetentry__Descriptor,
                new string[] { "Text", "Jams", });
        internal__static_eveobjects_jammers__Descriptor = Descriptor.MessageTypes[12];
        internal__static_eveobjects_jammers__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::eveobjects.jammers, global::eveobjects.jammers.Builder>(internal__static_eveobjects_jammers__Descriptor,
                new string[] { "Jammer", });
        internal__static_eveobjects_Interface__Descriptor = Descriptor.MessageTypes[13];
        internal__static_eveobjects_Interface__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::eveobjects.Interface, global::eveobjects.Interface.Builder>(internal__static_eveobjects_Interface__Descriptor,
                new string[] { "Name", "TopleftX", "TopleftY", "Width", "Height", "HasCloseButton", "CloseTopLeftX", "CloseTopLeftY", "HasContinueButton", "ContinueTopLeftX", "ContinueTopLeftY", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class infoObject : pb::GeneratedMessage<infoObject, infoObject.Builder> {
    private infoObject() { }
    private static readonly infoObject defaultInstance = new infoObject().MakeReadOnly();
    private static readonly string[] _infoObjectFieldNames = new string[] { "text", "value" };
    private static readonly uint[] _infoObjectFieldTags = new uint[] { 10, 16 };
    public static infoObject DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override infoObject DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override infoObject ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::eveobjects.Objects.internal__static_eveobjects_infoObject__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<infoObject, infoObject.Builder> InternalFieldAccessors {
      get { return global::eveobjects.Objects.internal__static_eveobjects_infoObject__FieldAccessorTable; }
    }
    
    public const int TextFieldNumber = 1;
    private bool hasText;
    private string text_ = "";
    public bool HasText {
      get { return hasText; }
    }
    public string Text {
      get { return text_; }
    }
    
    public const int ValueFieldNumber = 2;
    private bool hasValue;
    private int value_;
    public bool HasValue {
      get { return hasValue; }
    }
    public int Value {
      get { return value_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _infoObjectFieldNames;
      if (hasText) {
        output.WriteString(1, field_names[0], Text);
      }
      if (hasValue) {
        output.WriteInt32(2, field_names[1], Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasText) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Text);
        }
        if (hasValue) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, Value);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static infoObject ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static infoObject ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static infoObject ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static infoObject ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static infoObject ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static infoObject ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static infoObject ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static infoObject ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static infoObject ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static infoObject ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private infoObject MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(infoObject prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<infoObject, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(infoObject cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private infoObject result;
      
      private infoObject PrepareBuilder() {
        if (resultIsReadOnly) {
          infoObject original = result;
          result = new infoObject();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override infoObject MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::eveobjects.infoObject.Descriptor; }
      }
      
      public override infoObject DefaultInstanceForType {
        get { return global::eveobjects.infoObject.DefaultInstance; }
      }
      
      public override infoObject BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is infoObject) {
          return MergeFrom((infoObject) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(infoObject other) {
        if (other == global::eveobjects.infoObject.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasText) {
          Text = other.Text;
        }
        if (other.HasValue) {
          Value = other.Value;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_infoObjectFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _infoObjectFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasText = input.ReadString(ref result.text_);
              break;
            }
            case 16: {
              result.hasValue = input.ReadInt32(ref result.value_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasText {
        get { return result.hasText; }
      }
      public string Text {
        get { return result.Text; }
        set { SetText(value); }
      }
      public Builder SetText(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasText = true;
        result.text_ = value;
        return this;
      }
      public Builder ClearText() {
        PrepareBuilder();
        result.hasText = false;
        result.text_ = "";
        return this;
      }
      
      public bool HasValue {
        get { return result.hasValue; }
      }
      public int Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(int value) {
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = 0;
        return this;
      }
    }
    static infoObject() {
      object.ReferenceEquals(global::eveobjects.Objects.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class stringgroup : pb::GeneratedMessage<stringgroup, stringgroup.Builder> {
    private stringgroup() { }
    private static readonly stringgroup defaultInstance = new stringgroup().MakeReadOnly();
    private static readonly string[] _stringgroupFieldNames = new string[] { "data" };
    private static readonly uint[] _stringgroupFieldTags = new uint[] { 10 };
    public static stringgroup DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override stringgroup DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override stringgroup ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::eveobjects.Objects.internal__static_eveobjects_stringgroup__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<stringgroup, stringgroup.Builder> InternalFieldAccessors {
      get { return global::eveobjects.Objects.internal__static_eveobjects_stringgroup__FieldAccessorTable; }
    }
    
    public const int DataFieldNumber = 1;
    private pbc::PopsicleList<global::eveobjects.stringResponse> data_ = new pbc::PopsicleList<global::eveobjects.stringResponse>();
    public scg::IList<global::eveobjects.stringResponse> DataList {
      get { return data_; }
    }
    public int DataCount {
      get { return data_.Count; }
    }
    public global::eveobjects.stringResponse GetData(int index) {
      return data_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::eveobjects.stringResponse element in DataList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _stringgroupFieldNames;
      if (data_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], data_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::eveobjects.stringResponse element in DataList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static stringgroup ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static stringgroup ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static stringgroup ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static stringgroup ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static stringgroup ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static stringgroup ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static stringgroup ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static stringgroup ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static stringgroup ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static stringgroup ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private stringgroup MakeReadOnly() {
      data_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(stringgroup prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<stringgroup, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(stringgroup cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private stringgroup result;
      
      private stringgroup PrepareBuilder() {
        if (resultIsReadOnly) {
          stringgroup original = result;
          result = new stringgroup();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override stringgroup MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::eveobjects.stringgroup.Descriptor; }
      }
      
      public override stringgroup DefaultInstanceForType {
        get { return global::eveobjects.stringgroup.DefaultInstance; }
      }
      
      public override stringgroup BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is stringgroup) {
          return MergeFrom((stringgroup) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(stringgroup other) {
        if (other == global::eveobjects.stringgroup.DefaultInstance) return this;
        PrepareBuilder();
        if (other.data_.Count != 0) {
          result.data_.Add(other.data_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_stringgroupFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _stringgroupFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.data_, global::eveobjects.stringResponse.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::eveobjects.stringResponse> DataList {
        get { return PrepareBuilder().data_; }
      }
      public int DataCount {
        get { return result.DataCount; }
      }
      public global::eveobjects.stringResponse GetData(int index) {
        return result.GetData(index);
      }
      public Builder SetData(int index, global::eveobjects.stringResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.data_[index] = value;
        return this;
      }
      public Builder SetData(int index, global::eveobjects.stringResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.data_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddData(global::eveobjects.stringResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.data_.Add(value);
        return this;
      }
      public Builder AddData(global::eveobjects.stringResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.data_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeData(scg::IEnumerable<global::eveobjects.stringResponse> values) {
        PrepareBuilder();
        result.data_.Add(values);
        return this;
      }
      public Builder ClearData() {
        PrepareBuilder();
        result.data_.Clear();
        return this;
      }
    }
    static stringgroup() {
      object.ReferenceEquals(global::eveobjects.Objects.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class BooleanObject : pb::GeneratedMessage<BooleanObject, BooleanObject.Builder> {
    private BooleanObject() { }
    private static readonly BooleanObject defaultInstance = new BooleanObject().MakeReadOnly();
    private static readonly string[] _booleanObjectFieldNames = new string[] { "istrue" };
    private static readonly uint[] _booleanObjectFieldTags = new uint[] { 8 };
    public static BooleanObject DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BooleanObject DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BooleanObject ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::eveobjects.Objects.internal__static_eveobjects_BooleanObject__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BooleanObject, BooleanObject.Builder> InternalFieldAccessors {
      get { return global::eveobjects.Objects.internal__static_eveobjects_BooleanObject__FieldAccessorTable; }
    }
    
    public const int IstrueFieldNumber = 1;
    private bool hasIstrue;
    private bool istrue_;
    public bool HasIstrue {
      get { return hasIstrue; }
    }
    public bool Istrue {
      get { return istrue_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasIstrue) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _booleanObjectFieldNames;
      if (hasIstrue) {
        output.WriteBool(1, field_names[0], Istrue);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasIstrue) {
          size += pb::CodedOutputStream.ComputeBoolSize(1, Istrue);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static BooleanObject ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BooleanObject ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BooleanObject ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BooleanObject ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BooleanObject ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BooleanObject ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BooleanObject ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BooleanObject ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BooleanObject ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BooleanObject ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BooleanObject MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BooleanObject prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<BooleanObject, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BooleanObject cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BooleanObject result;
      
      private BooleanObject PrepareBuilder() {
        if (resultIsReadOnly) {
          BooleanObject original = result;
          result = new BooleanObject();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BooleanObject MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::eveobjects.BooleanObject.Descriptor; }
      }
      
      public override BooleanObject DefaultInstanceForType {
        get { return global::eveobjects.BooleanObject.DefaultInstance; }
      }
      
      public override BooleanObject BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BooleanObject) {
          return MergeFrom((BooleanObject) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BooleanObject other) {
        if (other == global::eveobjects.BooleanObject.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasIstrue) {
          Istrue = other.Istrue;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_booleanObjectFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _booleanObjectFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasIstrue = input.ReadBool(ref result.istrue_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasIstrue {
        get { return result.hasIstrue; }
      }
      public bool Istrue {
        get { return result.Istrue; }
        set { SetIstrue(value); }
      }
      public Builder SetIstrue(bool value) {
        PrepareBuilder();
        result.hasIstrue = true;
        result.istrue_ = value;
        return this;
      }
      public Builder ClearIstrue() {
        PrepareBuilder();
        result.hasIstrue = false;
        result.istrue_ = false;
        return this;
      }
    }
    static BooleanObject() {
      object.ReferenceEquals(global::eveobjects.Objects.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public class functionCall : pb::GeneratedMessage<functionCall, functionCall.Builder> {
    public functionCall() { }
    private static readonly functionCall defaultInstance = new functionCall().MakeReadOnly();
    private static readonly string[] _functionCallFieldNames = new string[] { "name", "strparameter" };
    private static readonly uint[] _functionCallFieldTags = new uint[] { 10, 18 };
    public static functionCall DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override functionCall DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override functionCall ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::eveobjects.Objects.internal__static_eveobjects_functionCall__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<functionCall, functionCall.Builder> InternalFieldAccessors {
      get { return global::eveobjects.Objects.internal__static_eveobjects_functionCall__FieldAccessorTable; }
    }
    
    public const int NameFieldNumber = 1;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int StrparameterFieldNumber = 2;
    private bool hasStrparameter;
    private string strparameter_ = "";
    public bool HasStrparameter {
      get { return hasStrparameter; }
    }
    public string Strparameter {
      get { return strparameter_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasName) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _functionCallFieldNames;
      if (hasName) {
        output.WriteString(1, field_names[0], Name);
      }
      if (hasStrparameter) {
        output.WriteString(2, field_names[1], Strparameter);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Name);
        }
        if (hasStrparameter) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Strparameter);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static functionCall ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static functionCall ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static functionCall ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static functionCall ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static functionCall ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static functionCall ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static functionCall ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static functionCall ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static functionCall ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static functionCall ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private functionCall MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(functionCall prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<functionCall, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(functionCall cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private functionCall result;
      
      private functionCall PrepareBuilder() {
        if (resultIsReadOnly) {
          functionCall original = result;
          result = new functionCall();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override functionCall MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::eveobjects.functionCall.Descriptor; }
      }
      
      public override functionCall DefaultInstanceForType {
        get { return global::eveobjects.functionCall.DefaultInstance; }
      }
      
      public override functionCall BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is functionCall) {
          return MergeFrom((functionCall) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(functionCall other) {
        if (other == global::eveobjects.functionCall.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasStrparameter) {
          Strparameter = other.Strparameter;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_functionCallFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _functionCallFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 18: {
              result.hasStrparameter = input.ReadString(ref result.strparameter_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasStrparameter {
        get { return result.hasStrparameter; }
      }
      public string Strparameter {
        get { return result.Strparameter; }
        set { SetStrparameter(value); }
      }
      public Builder SetStrparameter(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStrparameter = true;
        result.strparameter_ = value;
        return this;
      }
      public Builder ClearStrparameter() {
        PrepareBuilder();
        result.hasStrparameter = false;
        result.strparameter_ = "";
        return this;
      }
    }
    static functionCall() {
      object.ReferenceEquals(global::eveobjects.Objects.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class systemObject : pb::GeneratedMessage<systemObject, systemObject.Builder> {
    private systemObject() { }
    private static readonly systemObject defaultInstance = new systemObject().MakeReadOnly();
    private static readonly string[] _systemObjectFieldNames = new string[] { "info", "name" };
    private static readonly uint[] _systemObjectFieldTags = new uint[] { 18, 10 };
    public static systemObject DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override systemObject DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override systemObject ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::eveobjects.Objects.internal__static_eveobjects_systemObject__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<systemObject, systemObject.Builder> InternalFieldAccessors {
      get { return global::eveobjects.Objects.internal__static_eveobjects_systemObject__FieldAccessorTable; }
    }
    
    public const int NameFieldNumber = 1;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int InfoFieldNumber = 2;
    private bool hasInfo;
    private string info_ = "";
    public bool HasInfo {
      get { return hasInfo; }
    }
    public string Info {
      get { return info_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasName) return false;
        if (!hasInfo) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _systemObjectFieldNames;
      if (hasName) {
        output.WriteString(1, field_names[1], Name);
      }
      if (hasInfo) {
        output.WriteString(2, field_names[0], Info);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Name);
        }
        if (hasInfo) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Info);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static systemObject ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static systemObject ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static systemObject ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static systemObject ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static systemObject ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static systemObject ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static systemObject ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static systemObject ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static systemObject ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static systemObject ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private systemObject MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(systemObject prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<systemObject, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(systemObject cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private systemObject result;
      
      private systemObject PrepareBuilder() {
        if (resultIsReadOnly) {
          systemObject original = result;
          result = new systemObject();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override systemObject MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::eveobjects.systemObject.Descriptor; }
      }
      
      public override systemObject DefaultInstanceForType {
        get { return global::eveobjects.systemObject.DefaultInstance; }
      }
      
      public override systemObject BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is systemObject) {
          return MergeFrom((systemObject) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(systemObject other) {
        if (other == global::eveobjects.systemObject.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasInfo) {
          Info = other.Info;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_systemObjectFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _systemObjectFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 18: {
              result.hasInfo = input.ReadString(ref result.info_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasInfo {
        get { return result.hasInfo; }
      }
      public string Info {
        get { return result.Info; }
        set { SetInfo(value); }
      }
      public Builder SetInfo(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInfo = true;
        result.info_ = value;
        return this;
      }
      public Builder ClearInfo() {
        PrepareBuilder();
        result.hasInfo = false;
        result.info_ = "";
        return this;
      }
    }
    static systemObject() {
      object.ReferenceEquals(global::eveobjects.Objects.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class stringResponse : pb::GeneratedMessage<stringResponse, stringResponse.Builder> {
    private stringResponse() { }
    private static readonly stringResponse defaultInstance = new stringResponse().MakeReadOnly();
    private static readonly string[] _stringResponseFieldNames = new string[] { "data" };
    private static readonly uint[] _stringResponseFieldTags = new uint[] { 10 };
    public static stringResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override stringResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override stringResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::eveobjects.Objects.internal__static_eveobjects_stringResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<stringResponse, stringResponse.Builder> InternalFieldAccessors {
      get { return global::eveobjects.Objects.internal__static_eveobjects_stringResponse__FieldAccessorTable; }
    }
    
    public const int DataFieldNumber = 1;
    private bool hasData;
    private string data_ = "";
    public bool HasData {
      get { return hasData; }
    }
    public string Data {
      get { return data_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasData) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _stringResponseFieldNames;
      if (hasData) {
        output.WriteString(1, field_names[0], Data);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasData) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Data);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static stringResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static stringResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static stringResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static stringResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static stringResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static stringResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static stringResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static stringResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static stringResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static stringResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private stringResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(stringResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<stringResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(stringResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private stringResponse result;
      
      private stringResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          stringResponse original = result;
          result = new stringResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override stringResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::eveobjects.stringResponse.Descriptor; }
      }
      
      public override stringResponse DefaultInstanceForType {
        get { return global::eveobjects.stringResponse.DefaultInstance; }
      }
      
      public override stringResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is stringResponse) {
          return MergeFrom((stringResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(stringResponse other) {
        if (other == global::eveobjects.stringResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasData) {
          Data = other.Data;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_stringResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _stringResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasData = input.ReadString(ref result.data_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasData {
        get { return result.hasData; }
      }
      public string Data {
        get { return result.Data; }
        set { SetData(value); }
      }
      public Builder SetData(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasData = true;
        result.data_ = value;
        return this;
      }
      public Builder ClearData() {
        PrepareBuilder();
        result.hasData = false;
        result.data_ = "";
        return this;
      }
    }
    static stringResponse() {
      object.ReferenceEquals(global::eveobjects.Objects.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class overview : pb::GeneratedMessage<overview, overview.Builder> {
    private overview() { }
    private static readonly overview defaultInstance = new overview().MakeReadOnly();
    private static readonly string[] _overviewFieldNames = new string[] { "overviewEntry" };
    private static readonly uint[] _overviewFieldTags = new uint[] { 10 };
    public static overview DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override overview DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override overview ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::eveobjects.Objects.internal__static_eveobjects_overview__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<overview, overview.Builder> InternalFieldAccessors {
      get { return global::eveobjects.Objects.internal__static_eveobjects_overview__FieldAccessorTable; }
    }
    
    public const int OverviewEntryFieldNumber = 1;
    private pbc::PopsicleList<global::eveobjects.label> overviewEntry_ = new pbc::PopsicleList<global::eveobjects.label>();
    public scg::IList<global::eveobjects.label> OverviewEntryList {
      get { return overviewEntry_; }
    }
    public int OverviewEntryCount {
      get { return overviewEntry_.Count; }
    }
    public global::eveobjects.label GetOverviewEntry(int index) {
      return overviewEntry_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::eveobjects.label element in OverviewEntryList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _overviewFieldNames;
      if (overviewEntry_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], overviewEntry_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::eveobjects.label element in OverviewEntryList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static overview ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static overview ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static overview ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static overview ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static overview ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static overview ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static overview ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static overview ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static overview ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static overview ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private overview MakeReadOnly() {
      overviewEntry_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(overview prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<overview, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(overview cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private overview result;
      
      private overview PrepareBuilder() {
        if (resultIsReadOnly) {
          overview original = result;
          result = new overview();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override overview MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::eveobjects.overview.Descriptor; }
      }
      
      public override overview DefaultInstanceForType {
        get { return global::eveobjects.overview.DefaultInstance; }
      }
      
      public override overview BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is overview) {
          return MergeFrom((overview) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(overview other) {
        if (other == global::eveobjects.overview.DefaultInstance) return this;
        PrepareBuilder();
        if (other.overviewEntry_.Count != 0) {
          result.overviewEntry_.Add(other.overviewEntry_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_overviewFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _overviewFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.overviewEntry_, global::eveobjects.label.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::eveobjects.label> OverviewEntryList {
        get { return PrepareBuilder().overviewEntry_; }
      }
      public int OverviewEntryCount {
        get { return result.OverviewEntryCount; }
      }
      public global::eveobjects.label GetOverviewEntry(int index) {
        return result.GetOverviewEntry(index);
      }
      public Builder SetOverviewEntry(int index, global::eveobjects.label value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.overviewEntry_[index] = value;
        return this;
      }
      public Builder SetOverviewEntry(int index, global::eveobjects.label.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.overviewEntry_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddOverviewEntry(global::eveobjects.label value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.overviewEntry_.Add(value);
        return this;
      }
      public Builder AddOverviewEntry(global::eveobjects.label.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.overviewEntry_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeOverviewEntry(scg::IEnumerable<global::eveobjects.label> values) {
        PrepareBuilder();
        result.overviewEntry_.Add(values);
        return this;
      }
      public Builder ClearOverviewEntry() {
        PrepareBuilder();
        result.overviewEntry_.Clear();
        return this;
      }
    }
    static overview() {
      object.ReferenceEquals(global::eveobjects.Objects.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class itemgroup : pb::GeneratedMessage<itemgroup, itemgroup.Builder> {
    private itemgroup() { }
    private static readonly itemgroup defaultInstance = new itemgroup().MakeReadOnly();
    private static readonly string[] _itemgroupFieldNames = new string[] { "items" };
    private static readonly uint[] _itemgroupFieldTags = new uint[] { 10 };
    public static itemgroup DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override itemgroup DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override itemgroup ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::eveobjects.Objects.internal__static_eveobjects_itemgroup__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<itemgroup, itemgroup.Builder> InternalFieldAccessors {
      get { return global::eveobjects.Objects.internal__static_eveobjects_itemgroup__FieldAccessorTable; }
    }
    
    public const int ItemsFieldNumber = 1;
    private pbc::PopsicleList<global::eveobjects.item> items_ = new pbc::PopsicleList<global::eveobjects.item>();
    public scg::IList<global::eveobjects.item> ItemsList {
      get { return items_; }
    }
    public int ItemsCount {
      get { return items_.Count; }
    }
    public global::eveobjects.item GetItems(int index) {
      return items_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::eveobjects.item element in ItemsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _itemgroupFieldNames;
      if (items_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], items_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::eveobjects.item element in ItemsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static itemgroup ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static itemgroup ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static itemgroup ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static itemgroup ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static itemgroup ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static itemgroup ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static itemgroup ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static itemgroup ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static itemgroup ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static itemgroup ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private itemgroup MakeReadOnly() {
      items_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(itemgroup prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<itemgroup, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(itemgroup cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private itemgroup result;
      
      private itemgroup PrepareBuilder() {
        if (resultIsReadOnly) {
          itemgroup original = result;
          result = new itemgroup();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override itemgroup MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::eveobjects.itemgroup.Descriptor; }
      }
      
      public override itemgroup DefaultInstanceForType {
        get { return global::eveobjects.itemgroup.DefaultInstance; }
      }
      
      public override itemgroup BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is itemgroup) {
          return MergeFrom((itemgroup) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(itemgroup other) {
        if (other == global::eveobjects.itemgroup.DefaultInstance) return this;
        PrepareBuilder();
        if (other.items_.Count != 0) {
          result.items_.Add(other.items_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_itemgroupFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _itemgroupFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.items_, global::eveobjects.item.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::eveobjects.item> ItemsList {
        get { return PrepareBuilder().items_; }
      }
      public int ItemsCount {
        get { return result.ItemsCount; }
      }
      public global::eveobjects.item GetItems(int index) {
        return result.GetItems(index);
      }
      public Builder SetItems(int index, global::eveobjects.item value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.items_[index] = value;
        return this;
      }
      public Builder SetItems(int index, global::eveobjects.item.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.items_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddItems(global::eveobjects.item value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.items_.Add(value);
        return this;
      }
      public Builder AddItems(global::eveobjects.item.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.items_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeItems(scg::IEnumerable<global::eveobjects.item> values) {
        PrepareBuilder();
        result.items_.Add(values);
        return this;
      }
      public Builder ClearItems() {
        PrepareBuilder();
        result.items_.Clear();
        return this;
      }
    }
    static itemgroup() {
      object.ReferenceEquals(global::eveobjects.Objects.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class item : pb::GeneratedMessage<item, item.Builder> {
    private item() { }
    private static readonly item defaultInstance = new item().MakeReadOnly();
    private static readonly string[] _itemFieldNames = new string[] { "data", "meta", "name", "quantity", "volume" };
    private static readonly uint[] _itemFieldTags = new uint[] { 42, 26, 10, 16, 34 };
    public static item DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override item DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override item ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::eveobjects.Objects.internal__static_eveobjects_item__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<item, item.Builder> InternalFieldAccessors {
      get { return global::eveobjects.Objects.internal__static_eveobjects_item__FieldAccessorTable; }
    }
    
    public const int NameFieldNumber = 1;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int QuantityFieldNumber = 2;
    private bool hasQuantity;
    private int quantity_;
    public bool HasQuantity {
      get { return hasQuantity; }
    }
    public int Quantity {
      get { return quantity_; }
    }
    
    public const int MetaFieldNumber = 3;
    private bool hasMeta;
    private string meta_ = "";
    public bool HasMeta {
      get { return hasMeta; }
    }
    public string Meta {
      get { return meta_; }
    }
    
    public const int VolumeFieldNumber = 4;
    private bool hasVolume;
    private string volume_ = "";
    public bool HasVolume {
      get { return hasVolume; }
    }
    public string Volume {
      get { return volume_; }
    }
    
    public const int DataFieldNumber = 5;
    private bool hasData;
    private global::eveobjects.label data_;
    public bool HasData {
      get { return hasData; }
    }
    public global::eveobjects.label Data {
      get { return data_ ?? global::eveobjects.label.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasName) return false;
        if (!hasQuantity) return false;
        if (!hasMeta) return false;
        if (!hasVolume) return false;
        if (!hasData) return false;
        if (!Data.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _itemFieldNames;
      if (hasName) {
        output.WriteString(1, field_names[2], Name);
      }
      if (hasQuantity) {
        output.WriteInt32(2, field_names[3], Quantity);
      }
      if (hasMeta) {
        output.WriteString(3, field_names[1], Meta);
      }
      if (hasVolume) {
        output.WriteString(4, field_names[4], Volume);
      }
      if (hasData) {
        output.WriteMessage(5, field_names[0], Data);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Name);
        }
        if (hasQuantity) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, Quantity);
        }
        if (hasMeta) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Meta);
        }
        if (hasVolume) {
          size += pb::CodedOutputStream.ComputeStringSize(4, Volume);
        }
        if (hasData) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, Data);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static item ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static item ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static item ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static item ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static item ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static item ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static item ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static item ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static item ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static item ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private item MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(item prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<item, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(item cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private item result;
      
      private item PrepareBuilder() {
        if (resultIsReadOnly) {
          item original = result;
          result = new item();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override item MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::eveobjects.item.Descriptor; }
      }
      
      public override item DefaultInstanceForType {
        get { return global::eveobjects.item.DefaultInstance; }
      }
      
      public override item BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is item) {
          return MergeFrom((item) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(item other) {
        if (other == global::eveobjects.item.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasQuantity) {
          Quantity = other.Quantity;
        }
        if (other.HasMeta) {
          Meta = other.Meta;
        }
        if (other.HasVolume) {
          Volume = other.Volume;
        }
        if (other.HasData) {
          MergeData(other.Data);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_itemFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _itemFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 16: {
              result.hasQuantity = input.ReadInt32(ref result.quantity_);
              break;
            }
            case 26: {
              result.hasMeta = input.ReadString(ref result.meta_);
              break;
            }
            case 34: {
              result.hasVolume = input.ReadString(ref result.volume_);
              break;
            }
            case 42: {
              global::eveobjects.label.Builder subBuilder = global::eveobjects.label.CreateBuilder();
              if (result.hasData) {
                subBuilder.MergeFrom(Data);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Data = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasQuantity {
        get { return result.hasQuantity; }
      }
      public int Quantity {
        get { return result.Quantity; }
        set { SetQuantity(value); }
      }
      public Builder SetQuantity(int value) {
        PrepareBuilder();
        result.hasQuantity = true;
        result.quantity_ = value;
        return this;
      }
      public Builder ClearQuantity() {
        PrepareBuilder();
        result.hasQuantity = false;
        result.quantity_ = 0;
        return this;
      }
      
      public bool HasMeta {
        get { return result.hasMeta; }
      }
      public string Meta {
        get { return result.Meta; }
        set { SetMeta(value); }
      }
      public Builder SetMeta(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMeta = true;
        result.meta_ = value;
        return this;
      }
      public Builder ClearMeta() {
        PrepareBuilder();
        result.hasMeta = false;
        result.meta_ = "";
        return this;
      }
      
      public bool HasVolume {
        get { return result.hasVolume; }
      }
      public string Volume {
        get { return result.Volume; }
        set { SetVolume(value); }
      }
      public Builder SetVolume(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasVolume = true;
        result.volume_ = value;
        return this;
      }
      public Builder ClearVolume() {
        PrepareBuilder();
        result.hasVolume = false;
        result.volume_ = "";
        return this;
      }
      
      public bool HasData {
       get { return result.hasData; }
      }
      public global::eveobjects.label Data {
        get { return result.Data; }
        set { SetData(value); }
      }
      public Builder SetData(global::eveobjects.label value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasData = true;
        result.data_ = value;
        return this;
      }
      public Builder SetData(global::eveobjects.label.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasData = true;
        result.data_ = builderForValue.Build();
        return this;
      }
      public Builder MergeData(global::eveobjects.label value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasData &&
            result.data_ != global::eveobjects.label.DefaultInstance) {
            result.data_ = global::eveobjects.label.CreateBuilder(result.data_).MergeFrom(value).BuildPartial();
        } else {
          result.data_ = value;
        }
        result.hasData = true;
        return this;
      }
      public Builder ClearData() {
        PrepareBuilder();
        result.hasData = false;
        result.data_ = null;
        return this;
      }
    }
    static item() {
      object.ReferenceEquals(global::eveobjects.Objects.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class label : pb::GeneratedMessage<label, label.Builder> {
    private label() { }
    private static readonly label defaultInstance = new label().MakeReadOnly();
    private static readonly string[] _labelFieldNames = new string[] { "color", "height", "text", "topLeftX", "topLeftY", "width" };
    private static readonly uint[] _labelFieldTags = new uint[] { 49, 40, 10, 16, 24, 32 };
    public static label DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override label DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override label ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::eveobjects.Objects.internal__static_eveobjects_label__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<label, label.Builder> InternalFieldAccessors {
      get { return global::eveobjects.Objects.internal__static_eveobjects_label__FieldAccessorTable; }
    }
    
    public const int TextFieldNumber = 1;
    private bool hasText;
    private string text_ = "";
    public bool HasText {
      get { return hasText; }
    }
    public string Text {
      get { return text_; }
    }
    
    public const int TopLeftXFieldNumber = 2;
    private bool hasTopLeftX;
    private int topLeftX_;
    public bool HasTopLeftX {
      get { return hasTopLeftX; }
    }
    public int TopLeftX {
      get { return topLeftX_; }
    }
    
    public const int TopLeftYFieldNumber = 3;
    private bool hasTopLeftY;
    private int topLeftY_;
    public bool HasTopLeftY {
      get { return hasTopLeftY; }
    }
    public int TopLeftY {
      get { return topLeftY_; }
    }
    
    public const int WidthFieldNumber = 4;
    private bool hasWidth;
    private int width_;
    public bool HasWidth {
      get { return hasWidth; }
    }
    public int Width {
      get { return width_; }
    }
    
    public const int HeightFieldNumber = 5;
    private bool hasHeight;
    private int height_;
    public bool HasHeight {
      get { return hasHeight; }
    }
    public int Height {
      get { return height_; }
    }
    
    public const int ColorFieldNumber = 6;
    private bool hasColor;
    private double color_;
    public bool HasColor {
      get { return hasColor; }
    }
    public double Color {
      get { return color_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasText) return false;
        if (!hasTopLeftX) return false;
        if (!hasTopLeftY) return false;
        if (!hasWidth) return false;
        if (!hasHeight) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _labelFieldNames;
      if (hasText) {
        output.WriteString(1, field_names[2], Text);
      }
      if (hasTopLeftX) {
        output.WriteInt32(2, field_names[3], TopLeftX);
      }
      if (hasTopLeftY) {
        output.WriteInt32(3, field_names[4], TopLeftY);
      }
      if (hasWidth) {
        output.WriteInt32(4, field_names[5], Width);
      }
      if (hasHeight) {
        output.WriteInt32(5, field_names[1], Height);
      }
      if (hasColor) {
        output.WriteDouble(6, field_names[0], Color);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasText) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Text);
        }
        if (hasTopLeftX) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, TopLeftX);
        }
        if (hasTopLeftY) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, TopLeftY);
        }
        if (hasWidth) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, Width);
        }
        if (hasHeight) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, Height);
        }
        if (hasColor) {
          size += pb::CodedOutputStream.ComputeDoubleSize(6, Color);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static label ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static label ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static label ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static label ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static label ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static label ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static label ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static label ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static label ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static label ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private label MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(label prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<label, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(label cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private label result;
      
      private label PrepareBuilder() {
        if (resultIsReadOnly) {
          label original = result;
          result = new label();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override label MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::eveobjects.label.Descriptor; }
      }
      
      public override label DefaultInstanceForType {
        get { return global::eveobjects.label.DefaultInstance; }
      }
      
      public override label BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is label) {
          return MergeFrom((label) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(label other) {
        if (other == global::eveobjects.label.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasText) {
          Text = other.Text;
        }
        if (other.HasTopLeftX) {
          TopLeftX = other.TopLeftX;
        }
        if (other.HasTopLeftY) {
          TopLeftY = other.TopLeftY;
        }
        if (other.HasWidth) {
          Width = other.Width;
        }
        if (other.HasHeight) {
          Height = other.Height;
        }
        if (other.HasColor) {
          Color = other.Color;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_labelFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _labelFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasText = input.ReadString(ref result.text_);
              break;
            }
            case 16: {
              result.hasTopLeftX = input.ReadInt32(ref result.topLeftX_);
              break;
            }
            case 24: {
              result.hasTopLeftY = input.ReadInt32(ref result.topLeftY_);
              break;
            }
            case 32: {
              result.hasWidth = input.ReadInt32(ref result.width_);
              break;
            }
            case 40: {
              result.hasHeight = input.ReadInt32(ref result.height_);
              break;
            }
            case 49: {
              result.hasColor = input.ReadDouble(ref result.color_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasText {
        get { return result.hasText; }
      }
      public string Text {
        get { return result.Text; }
        set { SetText(value); }
      }
      public Builder SetText(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasText = true;
        result.text_ = value;
        return this;
      }
      public Builder ClearText() {
        PrepareBuilder();
        result.hasText = false;
        result.text_ = "";
        return this;
      }
      
      public bool HasTopLeftX {
        get { return result.hasTopLeftX; }
      }
      public int TopLeftX {
        get { return result.TopLeftX; }
        set { SetTopLeftX(value); }
      }
      public Builder SetTopLeftX(int value) {
        PrepareBuilder();
        result.hasTopLeftX = true;
        result.topLeftX_ = value;
        return this;
      }
      public Builder ClearTopLeftX() {
        PrepareBuilder();
        result.hasTopLeftX = false;
        result.topLeftX_ = 0;
        return this;
      }
      
      public bool HasTopLeftY {
        get { return result.hasTopLeftY; }
      }
      public int TopLeftY {
        get { return result.TopLeftY; }
        set { SetTopLeftY(value); }
      }
      public Builder SetTopLeftY(int value) {
        PrepareBuilder();
        result.hasTopLeftY = true;
        result.topLeftY_ = value;
        return this;
      }
      public Builder ClearTopLeftY() {
        PrepareBuilder();
        result.hasTopLeftY = false;
        result.topLeftY_ = 0;
        return this;
      }
      
      public bool HasWidth {
        get { return result.hasWidth; }
      }
      public int Width {
        get { return result.Width; }
        set { SetWidth(value); }
      }
      public Builder SetWidth(int value) {
        PrepareBuilder();
        result.hasWidth = true;
        result.width_ = value;
        return this;
      }
      public Builder ClearWidth() {
        PrepareBuilder();
        result.hasWidth = false;
        result.width_ = 0;
        return this;
      }
      
      public bool HasHeight {
        get { return result.hasHeight; }
      }
      public int Height {
        get { return result.Height; }
        set { SetHeight(value); }
      }
      public Builder SetHeight(int value) {
        PrepareBuilder();
        result.hasHeight = true;
        result.height_ = value;
        return this;
      }
      public Builder ClearHeight() {
        PrepareBuilder();
        result.hasHeight = false;
        result.height_ = 0;
        return this;
      }
      
      public bool HasColor {
        get { return result.hasColor; }
      }
      public double Color {
        get { return result.Color; }
        set { SetColor(value); }
      }
      public Builder SetColor(double value) {
        PrepareBuilder();
        result.hasColor = true;
        result.color_ = value;
        return this;
      }
      public Builder ClearColor() {
        PrepareBuilder();
        result.hasColor = false;
        result.color_ = 0D;
        return this;
      }
    }
    static label() {
      object.ReferenceEquals(global::eveobjects.Objects.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class TargetList : pb::GeneratedMessage<TargetList, TargetList.Builder> {
    private TargetList() { }
    private static readonly TargetList defaultInstance = new TargetList().MakeReadOnly();
    private static readonly string[] _targetListFieldNames = new string[] { "thistarget" };
    private static readonly uint[] _targetListFieldTags = new uint[] { 10 };
    public static TargetList DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TargetList DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TargetList ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::eveobjects.Objects.internal__static_eveobjects_TargetList__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TargetList, TargetList.Builder> InternalFieldAccessors {
      get { return global::eveobjects.Objects.internal__static_eveobjects_TargetList__FieldAccessorTable; }
    }
    
    public const int ThistargetFieldNumber = 1;
    private pbc::PopsicleList<global::eveobjects.targetentry> thistarget_ = new pbc::PopsicleList<global::eveobjects.targetentry>();
    public scg::IList<global::eveobjects.targetentry> ThistargetList {
      get { return thistarget_; }
    }
    public int ThistargetCount {
      get { return thistarget_.Count; }
    }
    public global::eveobjects.targetentry GetThistarget(int index) {
      return thistarget_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::eveobjects.targetentry element in ThistargetList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _targetListFieldNames;
      if (thistarget_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], thistarget_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::eveobjects.targetentry element in ThistargetList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static TargetList ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TargetList ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TargetList ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TargetList ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TargetList ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TargetList ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TargetList ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TargetList ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TargetList ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TargetList ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TargetList MakeReadOnly() {
      thistarget_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TargetList prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<TargetList, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TargetList cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TargetList result;
      
      private TargetList PrepareBuilder() {
        if (resultIsReadOnly) {
          TargetList original = result;
          result = new TargetList();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TargetList MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::eveobjects.TargetList.Descriptor; }
      }
      
      public override TargetList DefaultInstanceForType {
        get { return global::eveobjects.TargetList.DefaultInstance; }
      }
      
      public override TargetList BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TargetList) {
          return MergeFrom((TargetList) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TargetList other) {
        if (other == global::eveobjects.TargetList.DefaultInstance) return this;
        PrepareBuilder();
        if (other.thistarget_.Count != 0) {
          result.thistarget_.Add(other.thistarget_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_targetListFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _targetListFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.thistarget_, global::eveobjects.targetentry.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::eveobjects.targetentry> ThistargetList {
        get { return PrepareBuilder().thistarget_; }
      }
      public int ThistargetCount {
        get { return result.ThistargetCount; }
      }
      public global::eveobjects.targetentry GetThistarget(int index) {
        return result.GetThistarget(index);
      }
      public Builder SetThistarget(int index, global::eveobjects.targetentry value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.thistarget_[index] = value;
        return this;
      }
      public Builder SetThistarget(int index, global::eveobjects.targetentry.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.thistarget_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddThistarget(global::eveobjects.targetentry value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.thistarget_.Add(value);
        return this;
      }
      public Builder AddThistarget(global::eveobjects.targetentry.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.thistarget_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeThistarget(scg::IEnumerable<global::eveobjects.targetentry> values) {
        PrepareBuilder();
        result.thistarget_.Add(values);
        return this;
      }
      public Builder ClearThistarget() {
        PrepareBuilder();
        result.thistarget_.Clear();
        return this;
      }
    }
    static TargetList() {
      object.ReferenceEquals(global::eveobjects.Objects.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class targetentry : pb::GeneratedMessage<targetentry, targetentry.Builder> {
    private targetentry() { }
    private static readonly targetentry defaultInstance = new targetentry().MakeReadOnly();
    private static readonly string[] _targetentryFieldNames = new string[] { "jams", "text" };
    private static readonly uint[] _targetentryFieldTags = new uint[] { 18, 10 };
    public static targetentry DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override targetentry DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override targetentry ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::eveobjects.Objects.internal__static_eveobjects_targetentry__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<targetentry, targetentry.Builder> InternalFieldAccessors {
      get { return global::eveobjects.Objects.internal__static_eveobjects_targetentry__FieldAccessorTable; }
    }
    
    public const int TextFieldNumber = 1;
    private bool hasText;
    private global::eveobjects.label text_;
    public bool HasText {
      get { return hasText; }
    }
    public global::eveobjects.label Text {
      get { return text_ ?? global::eveobjects.label.DefaultInstance; }
    }
    
    public const int JamsFieldNumber = 2;
    private bool hasJams;
    private global::eveobjects.jammers jams_;
    public bool HasJams {
      get { return hasJams; }
    }
    public global::eveobjects.jammers Jams {
      get { return jams_ ?? global::eveobjects.jammers.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasText) {
          if (!Text.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _targetentryFieldNames;
      if (hasText) {
        output.WriteMessage(1, field_names[1], Text);
      }
      if (hasJams) {
        output.WriteMessage(2, field_names[0], Jams);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasText) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Text);
        }
        if (hasJams) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Jams);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static targetentry ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static targetentry ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static targetentry ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static targetentry ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static targetentry ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static targetentry ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static targetentry ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static targetentry ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static targetentry ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static targetentry ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private targetentry MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(targetentry prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<targetentry, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(targetentry cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private targetentry result;
      
      private targetentry PrepareBuilder() {
        if (resultIsReadOnly) {
          targetentry original = result;
          result = new targetentry();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override targetentry MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::eveobjects.targetentry.Descriptor; }
      }
      
      public override targetentry DefaultInstanceForType {
        get { return global::eveobjects.targetentry.DefaultInstance; }
      }
      
      public override targetentry BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is targetentry) {
          return MergeFrom((targetentry) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(targetentry other) {
        if (other == global::eveobjects.targetentry.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasText) {
          MergeText(other.Text);
        }
        if (other.HasJams) {
          MergeJams(other.Jams);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_targetentryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _targetentryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::eveobjects.label.Builder subBuilder = global::eveobjects.label.CreateBuilder();
              if (result.hasText) {
                subBuilder.MergeFrom(Text);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Text = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::eveobjects.jammers.Builder subBuilder = global::eveobjects.jammers.CreateBuilder();
              if (result.hasJams) {
                subBuilder.MergeFrom(Jams);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Jams = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasText {
       get { return result.hasText; }
      }
      public global::eveobjects.label Text {
        get { return result.Text; }
        set { SetText(value); }
      }
      public Builder SetText(global::eveobjects.label value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasText = true;
        result.text_ = value;
        return this;
      }
      public Builder SetText(global::eveobjects.label.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasText = true;
        result.text_ = builderForValue.Build();
        return this;
      }
      public Builder MergeText(global::eveobjects.label value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasText &&
            result.text_ != global::eveobjects.label.DefaultInstance) {
            result.text_ = global::eveobjects.label.CreateBuilder(result.text_).MergeFrom(value).BuildPartial();
        } else {
          result.text_ = value;
        }
        result.hasText = true;
        return this;
      }
      public Builder ClearText() {
        PrepareBuilder();
        result.hasText = false;
        result.text_ = null;
        return this;
      }
      
      public bool HasJams {
       get { return result.hasJams; }
      }
      public global::eveobjects.jammers Jams {
        get { return result.Jams; }
        set { SetJams(value); }
      }
      public Builder SetJams(global::eveobjects.jammers value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasJams = true;
        result.jams_ = value;
        return this;
      }
      public Builder SetJams(global::eveobjects.jammers.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasJams = true;
        result.jams_ = builderForValue.Build();
        return this;
      }
      public Builder MergeJams(global::eveobjects.jammers value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasJams &&
            result.jams_ != global::eveobjects.jammers.DefaultInstance) {
            result.jams_ = global::eveobjects.jammers.CreateBuilder(result.jams_).MergeFrom(value).BuildPartial();
        } else {
          result.jams_ = value;
        }
        result.hasJams = true;
        return this;
      }
      public Builder ClearJams() {
        PrepareBuilder();
        result.hasJams = false;
        result.jams_ = null;
        return this;
      }
    }
    static targetentry() {
      object.ReferenceEquals(global::eveobjects.Objects.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class jammers : pb::GeneratedMessage<jammers, jammers.Builder> {
    private jammers() { }
    private static readonly jammers defaultInstance = new jammers().MakeReadOnly();
    private static readonly string[] _jammersFieldNames = new string[] { "jammer" };
    private static readonly uint[] _jammersFieldTags = new uint[] { 10 };
    public static jammers DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override jammers DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override jammers ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::eveobjects.Objects.internal__static_eveobjects_jammers__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<jammers, jammers.Builder> InternalFieldAccessors {
      get { return global::eveobjects.Objects.internal__static_eveobjects_jammers__FieldAccessorTable; }
    }
    
    public const int JammerFieldNumber = 1;
    private pbc::PopsicleList<string> jammer_ = new pbc::PopsicleList<string>();
    public scg::IList<string> JammerList {
      get { return pbc::Lists.AsReadOnly(jammer_); }
    }
    public int JammerCount {
      get { return jammer_.Count; }
    }
    public string GetJammer(int index) {
      return jammer_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _jammersFieldNames;
      if (jammer_.Count > 0) {
        output.WriteStringArray(1, field_names[0], jammer_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        {
          int dataSize = 0;
          foreach (string element in JammerList) {
            dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
          }
          size += dataSize;
          size += 1 * jammer_.Count;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static jammers ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static jammers ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static jammers ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static jammers ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static jammers ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static jammers ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static jammers ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static jammers ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static jammers ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static jammers ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private jammers MakeReadOnly() {
      jammer_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(jammers prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<jammers, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(jammers cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private jammers result;
      
      private jammers PrepareBuilder() {
        if (resultIsReadOnly) {
          jammers original = result;
          result = new jammers();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override jammers MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::eveobjects.jammers.Descriptor; }
      }
      
      public override jammers DefaultInstanceForType {
        get { return global::eveobjects.jammers.DefaultInstance; }
      }
      
      public override jammers BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is jammers) {
          return MergeFrom((jammers) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(jammers other) {
        if (other == global::eveobjects.jammers.DefaultInstance) return this;
        PrepareBuilder();
        if (other.jammer_.Count != 0) {
          result.jammer_.Add(other.jammer_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_jammersFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _jammersFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadStringArray(tag, field_name, result.jammer_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<string> JammerList {
        get { return PrepareBuilder().jammer_; }
      }
      public int JammerCount {
        get { return result.JammerCount; }
      }
      public string GetJammer(int index) {
        return result.GetJammer(index);
      }
      public Builder SetJammer(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.jammer_[index] = value;
        return this;
      }
      public Builder AddJammer(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.jammer_.Add(value);
        return this;
      }
      public Builder AddRangeJammer(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.jammer_.Add(values);
        return this;
      }
      public Builder ClearJammer() {
        PrepareBuilder();
        result.jammer_.Clear();
        return this;
      }
    }
    static jammers() {
      object.ReferenceEquals(global::eveobjects.Objects.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Interface : pb::GeneratedMessage<Interface, Interface.Builder> {
    private Interface() { }
    private static readonly Interface defaultInstance = new Interface().MakeReadOnly();
    private static readonly string[] _interfaceFieldNames = new string[] { "closeTopLeftX", "closeTopLeftY", "continueTopLeftX", "continueTopLeftY", "hasCloseButton", "hasContinueButton", "height", "name", "topleftX", "topleftY", "width" };
    private static readonly uint[] _interfaceFieldTags = new uint[] { 56, 64, 80, 88, 48, 72, 40, 10, 16, 24, 32 };
    public static Interface DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Interface DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Interface ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::eveobjects.Objects.internal__static_eveobjects_Interface__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Interface, Interface.Builder> InternalFieldAccessors {
      get { return global::eveobjects.Objects.internal__static_eveobjects_Interface__FieldAccessorTable; }
    }
    
    public const int NameFieldNumber = 1;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int TopleftXFieldNumber = 2;
    private bool hasTopleftX;
    private int topleftX_;
    public bool HasTopleftX {
      get { return hasTopleftX; }
    }
    public int TopleftX {
      get { return topleftX_; }
    }
    
    public const int TopleftYFieldNumber = 3;
    private bool hasTopleftY;
    private int topleftY_;
    public bool HasTopleftY {
      get { return hasTopleftY; }
    }
    public int TopleftY {
      get { return topleftY_; }
    }
    
    public const int WidthFieldNumber = 4;
    private bool hasWidth;
    private int width_;
    public bool HasWidth {
      get { return hasWidth; }
    }
    public int Width {
      get { return width_; }
    }
    
    public const int HeightFieldNumber = 5;
    private bool hasHeight;
    private int height_;
    public bool HasHeight {
      get { return hasHeight; }
    }
    public int Height {
      get { return height_; }
    }
    
    public const int HasCloseButtonFieldNumber = 6;
    private bool hasHasCloseButton;
    private bool hasCloseButton_;
    public bool HasHasCloseButton {
      get { return hasHasCloseButton; }
    }
    public bool HasCloseButton {
      get { return hasCloseButton_; }
    }
    
    public const int CloseTopLeftXFieldNumber = 7;
    private bool hasCloseTopLeftX;
    private int closeTopLeftX_;
    public bool HasCloseTopLeftX {
      get { return hasCloseTopLeftX; }
    }
    public int CloseTopLeftX {
      get { return closeTopLeftX_; }
    }
    
    public const int CloseTopLeftYFieldNumber = 8;
    private bool hasCloseTopLeftY;
    private int closeTopLeftY_;
    public bool HasCloseTopLeftY {
      get { return hasCloseTopLeftY; }
    }
    public int CloseTopLeftY {
      get { return closeTopLeftY_; }
    }
    
    public const int HasContinueButtonFieldNumber = 9;
    private bool hasHasContinueButton;
    private bool hasContinueButton_;
    public bool HasHasContinueButton {
      get { return hasHasContinueButton; }
    }
    public bool HasContinueButton {
      get { return hasContinueButton_; }
    }
    
    public const int ContinueTopLeftXFieldNumber = 10;
    private bool hasContinueTopLeftX;
    private int continueTopLeftX_;
    public bool HasContinueTopLeftX {
      get { return hasContinueTopLeftX; }
    }
    public int ContinueTopLeftX {
      get { return continueTopLeftX_; }
    }
    
    public const int ContinueTopLeftYFieldNumber = 11;
    private bool hasContinueTopLeftY;
    private int continueTopLeftY_;
    public bool HasContinueTopLeftY {
      get { return hasContinueTopLeftY; }
    }
    public int ContinueTopLeftY {
      get { return continueTopLeftY_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasName) return false;
        if (!hasTopleftX) return false;
        if (!hasTopleftY) return false;
        if (!hasWidth) return false;
        if (!hasHeight) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _interfaceFieldNames;
      if (hasName) {
        output.WriteString(1, field_names[7], Name);
      }
      if (hasTopleftX) {
        output.WriteInt32(2, field_names[8], TopleftX);
      }
      if (hasTopleftY) {
        output.WriteInt32(3, field_names[9], TopleftY);
      }
      if (hasWidth) {
        output.WriteInt32(4, field_names[10], Width);
      }
      if (hasHeight) {
        output.WriteInt32(5, field_names[6], Height);
      }
      if (hasHasCloseButton) {
        output.WriteBool(6, field_names[4], HasCloseButton);
      }
      if (hasCloseTopLeftX) {
        output.WriteInt32(7, field_names[0], CloseTopLeftX);
      }
      if (hasCloseTopLeftY) {
        output.WriteInt32(8, field_names[1], CloseTopLeftY);
      }
      if (hasHasContinueButton) {
        output.WriteBool(9, field_names[5], HasContinueButton);
      }
      if (hasContinueTopLeftX) {
        output.WriteInt32(10, field_names[2], ContinueTopLeftX);
      }
      if (hasContinueTopLeftY) {
        output.WriteInt32(11, field_names[3], ContinueTopLeftY);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Name);
        }
        if (hasTopleftX) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, TopleftX);
        }
        if (hasTopleftY) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, TopleftY);
        }
        if (hasWidth) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, Width);
        }
        if (hasHeight) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, Height);
        }
        if (hasHasCloseButton) {
          size += pb::CodedOutputStream.ComputeBoolSize(6, HasCloseButton);
        }
        if (hasCloseTopLeftX) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, CloseTopLeftX);
        }
        if (hasCloseTopLeftY) {
          size += pb::CodedOutputStream.ComputeInt32Size(8, CloseTopLeftY);
        }
        if (hasHasContinueButton) {
          size += pb::CodedOutputStream.ComputeBoolSize(9, HasContinueButton);
        }
        if (hasContinueTopLeftX) {
          size += pb::CodedOutputStream.ComputeInt32Size(10, ContinueTopLeftX);
        }
        if (hasContinueTopLeftY) {
          size += pb::CodedOutputStream.ComputeInt32Size(11, ContinueTopLeftY);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Interface ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Interface ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Interface ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Interface ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Interface ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Interface ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Interface ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Interface ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Interface ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Interface ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Interface MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Interface prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<Interface, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Interface cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Interface result;
      
      private Interface PrepareBuilder() {
        if (resultIsReadOnly) {
          Interface original = result;
          result = new Interface();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Interface MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::eveobjects.Interface.Descriptor; }
      }
      
      public override Interface DefaultInstanceForType {
        get { return global::eveobjects.Interface.DefaultInstance; }
      }
      
      public override Interface BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Interface) {
          return MergeFrom((Interface) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Interface other) {
        if (other == global::eveobjects.Interface.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasTopleftX) {
          TopleftX = other.TopleftX;
        }
        if (other.HasTopleftY) {
          TopleftY = other.TopleftY;
        }
        if (other.HasWidth) {
          Width = other.Width;
        }
        if (other.HasHeight) {
          Height = other.Height;
        }
        if (other.HasHasCloseButton) {
          HasCloseButton = other.HasCloseButton;
        }
        if (other.HasCloseTopLeftX) {
          CloseTopLeftX = other.CloseTopLeftX;
        }
        if (other.HasCloseTopLeftY) {
          CloseTopLeftY = other.CloseTopLeftY;
        }
        if (other.HasHasContinueButton) {
          HasContinueButton = other.HasContinueButton;
        }
        if (other.HasContinueTopLeftX) {
          ContinueTopLeftX = other.ContinueTopLeftX;
        }
        if (other.HasContinueTopLeftY) {
          ContinueTopLeftY = other.ContinueTopLeftY;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_interfaceFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _interfaceFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 16: {
              result.hasTopleftX = input.ReadInt32(ref result.topleftX_);
              break;
            }
            case 24: {
              result.hasTopleftY = input.ReadInt32(ref result.topleftY_);
              break;
            }
            case 32: {
              result.hasWidth = input.ReadInt32(ref result.width_);
              break;
            }
            case 40: {
              result.hasHeight = input.ReadInt32(ref result.height_);
              break;
            }
            case 48: {
              result.hasHasCloseButton = input.ReadBool(ref result.hasCloseButton_);
              break;
            }
            case 56: {
              result.hasCloseTopLeftX = input.ReadInt32(ref result.closeTopLeftX_);
              break;
            }
            case 64: {
              result.hasCloseTopLeftY = input.ReadInt32(ref result.closeTopLeftY_);
              break;
            }
            case 72: {
              result.hasHasContinueButton = input.ReadBool(ref result.hasContinueButton_);
              break;
            }
            case 80: {
              result.hasContinueTopLeftX = input.ReadInt32(ref result.continueTopLeftX_);
              break;
            }
            case 88: {
              result.hasContinueTopLeftY = input.ReadInt32(ref result.continueTopLeftY_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasTopleftX {
        get { return result.hasTopleftX; }
      }
      public int TopleftX {
        get { return result.TopleftX; }
        set { SetTopleftX(value); }
      }
      public Builder SetTopleftX(int value) {
        PrepareBuilder();
        result.hasTopleftX = true;
        result.topleftX_ = value;
        return this;
      }
      public Builder ClearTopleftX() {
        PrepareBuilder();
        result.hasTopleftX = false;
        result.topleftX_ = 0;
        return this;
      }
      
      public bool HasTopleftY {
        get { return result.hasTopleftY; }
      }
      public int TopleftY {
        get { return result.TopleftY; }
        set { SetTopleftY(value); }
      }
      public Builder SetTopleftY(int value) {
        PrepareBuilder();
        result.hasTopleftY = true;
        result.topleftY_ = value;
        return this;
      }
      public Builder ClearTopleftY() {
        PrepareBuilder();
        result.hasTopleftY = false;
        result.topleftY_ = 0;
        return this;
      }
      
      public bool HasWidth {
        get { return result.hasWidth; }
      }
      public int Width {
        get { return result.Width; }
        set { SetWidth(value); }
      }
      public Builder SetWidth(int value) {
        PrepareBuilder();
        result.hasWidth = true;
        result.width_ = value;
        return this;
      }
      public Builder ClearWidth() {
        PrepareBuilder();
        result.hasWidth = false;
        result.width_ = 0;
        return this;
      }
      
      public bool HasHeight {
        get { return result.hasHeight; }
      }
      public int Height {
        get { return result.Height; }
        set { SetHeight(value); }
      }
      public Builder SetHeight(int value) {
        PrepareBuilder();
        result.hasHeight = true;
        result.height_ = value;
        return this;
      }
      public Builder ClearHeight() {
        PrepareBuilder();
        result.hasHeight = false;
        result.height_ = 0;
        return this;
      }
      
      public bool HasHasCloseButton {
        get { return result.hasHasCloseButton; }
      }
      public bool HasCloseButton {
        get { return result.HasCloseButton; }
        set { SetHasCloseButton(value); }
      }
      public Builder SetHasCloseButton(bool value) {
        PrepareBuilder();
        result.hasHasCloseButton = true;
        result.hasCloseButton_ = value;
        return this;
      }
      public Builder ClearHasCloseButton() {
        PrepareBuilder();
        result.hasHasCloseButton = false;
        result.hasCloseButton_ = false;
        return this;
      }
      
      public bool HasCloseTopLeftX {
        get { return result.hasCloseTopLeftX; }
      }
      public int CloseTopLeftX {
        get { return result.CloseTopLeftX; }
        set { SetCloseTopLeftX(value); }
      }
      public Builder SetCloseTopLeftX(int value) {
        PrepareBuilder();
        result.hasCloseTopLeftX = true;
        result.closeTopLeftX_ = value;
        return this;
      }
      public Builder ClearCloseTopLeftX() {
        PrepareBuilder();
        result.hasCloseTopLeftX = false;
        result.closeTopLeftX_ = 0;
        return this;
      }
      
      public bool HasCloseTopLeftY {
        get { return result.hasCloseTopLeftY; }
      }
      public int CloseTopLeftY {
        get { return result.CloseTopLeftY; }
        set { SetCloseTopLeftY(value); }
      }
      public Builder SetCloseTopLeftY(int value) {
        PrepareBuilder();
        result.hasCloseTopLeftY = true;
        result.closeTopLeftY_ = value;
        return this;
      }
      public Builder ClearCloseTopLeftY() {
        PrepareBuilder();
        result.hasCloseTopLeftY = false;
        result.closeTopLeftY_ = 0;
        return this;
      }
      
      public bool HasHasContinueButton {
        get { return result.hasHasContinueButton; }
      }
      public bool HasContinueButton {
        get { return result.HasContinueButton; }
        set { SetHasContinueButton(value); }
      }
      public Builder SetHasContinueButton(bool value) {
        PrepareBuilder();
        result.hasHasContinueButton = true;
        result.hasContinueButton_ = value;
        return this;
      }
      public Builder ClearHasContinueButton() {
        PrepareBuilder();
        result.hasHasContinueButton = false;
        result.hasContinueButton_ = false;
        return this;
      }
      
      public bool HasContinueTopLeftX {
        get { return result.hasContinueTopLeftX; }
      }
      public int ContinueTopLeftX {
        get { return result.ContinueTopLeftX; }
        set { SetContinueTopLeftX(value); }
      }
      public Builder SetContinueTopLeftX(int value) {
        PrepareBuilder();
        result.hasContinueTopLeftX = true;
        result.continueTopLeftX_ = value;
        return this;
      }
      public Builder ClearContinueTopLeftX() {
        PrepareBuilder();
        result.hasContinueTopLeftX = false;
        result.continueTopLeftX_ = 0;
        return this;
      }
      
      public bool HasContinueTopLeftY {
        get { return result.hasContinueTopLeftY; }
      }
      public int ContinueTopLeftY {
        get { return result.ContinueTopLeftY; }
        set { SetContinueTopLeftY(value); }
      }
      public Builder SetContinueTopLeftY(int value) {
        PrepareBuilder();
        result.hasContinueTopLeftY = true;
        result.continueTopLeftY_ = value;
        return this;
      }
      public Builder ClearContinueTopLeftY() {
        PrepareBuilder();
        result.hasContinueTopLeftY = false;
        result.continueTopLeftY_ = 0;
        return this;
      }
    }
    static Interface() {
      object.ReferenceEquals(global::eveobjects.Objects.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
